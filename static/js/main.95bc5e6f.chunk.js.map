{"version":3,"sources":["components/Typeahead/reducer.js","components/InputField/InputField.js","helpers/sanitize.js","helpers/highlight.js","components/Typeahead/Typeahead.js","data/items.js","App.js","serviceWorker.js","index.js"],"names":["initialState","searchTerm","tempValue","activeIndex","dropdownActive","hoverActive","list","selectItem","payload","type","getMatchedItems","memoize","state","trimedValue","trim","filter","item","value","toLowerCase","includes","reducer","map","id","uniqueId","filteredListLength","length","current","styled","input","sanitizeHtml","allowedTags","allowedAttributes","allowedIframeHostnames","termToMatch","regex","RegExp","replace","match","Wrapper","div","ListWrapper","ListItem","props","isActive","Typeahead","name","options","useReducer","dispatch","matches","listRef","useRef","inputRef","handleItemClick","target","dataset","handleMouseEnter","handleMouseLeave","useEffect","handleClick","evt","contains","document","addEventListener","removeEventListener","activeNode","children","scrollIntoView","block","memoizedHighlight","useCallback","highlight","InputField","ref","autocomplete","placeholder","onChange","onKeyDown","key","preventDefault","incrementActiveIndex","idx","onClick","onMouseEnter","onMouseLeave","data-value","data-index","dangerouslySetInnerHTML","__html","compose","sanitize","FormField","InputLabel","label","App","htmlFor","items","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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CA,WACA,aACA,gBACA,WACA,YACA,QACA,QACA,SACA,eACA,aACA,YACA,YACA,SACA,eACA,QACA,OACA,YACA,WACA,OACA,QACA,YACA,YACA,UACA,cACA,SACA,oBACA,SACA,YACA,cACA,WACA,aACA,QACA,QACA,UACA,UACA,aACA,aACA,aACA,iBACA,YACA,WACA,aACA,gBACA,eACA,OACA,UACA,cACA,eACA,cACA,WACA,WACA,QACA,MACA,UACA,SACA,SACA,Y,sVC5GF,IAAMqB,EAAUX,IAAOY,IAAV,KAMPoD,EAAYhE,IAAOY,IAAV,KAITqD,EAAajE,IAAOkE,MAAV,KAqBDC,MAhBf,WACE,OACE,kBAAC,EAAD,KACE,kBAACH,EAAD,KACE,kBAACC,EAAD,CAAYG,QAAQ,UAApB,aACA,kBAAC,EAAD,CAAWlD,KAAK,SAASC,QAASkD,KAGpC,kBAACL,EAAD,KACE,kBAACC,EAAD,CAAYG,QAAQ,eAApB,eACA,kBAACvB,EAAD,CAAY/D,KAAK,OAAOoC,KAAK,cAAcvB,GAAG,mBCpBlC2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/D,MACvB,2DCXNgE,IAASC,OAAO,kBAAC,EAAD,MAASxC,SAASyC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.95bc5e6f.chunk.js","sourcesContent":["import uniqueId from 'lodash/fp/uniqueId';\nimport trim from 'lodash/fp/trim';\nimport memoize from 'fast-memoize';\n\nexport const initialState = {\n  searchTerm: '',\n  tempValue: '',\n  activeIndex: -1,\n  dropdownActive: false,\n  hoverActive: false,\n  list: []\n};\n\nconst SET_LIST = 'typeahead/SET_LIST';\nconst HIDE_DROPDOWN = 'typeahead/HIDE_DROPDOWN';\nconst UPDATE_SEARCH_TERM = 'typeahead/UPDATE_SEARCH_TERM';\nconst SELECT_ITEM = 'typeahead/SELECT_ITEM';\nconst INCREMENT_ACTIVE_INDEX = 'typeahead/INCREMENT_ACTIVE_INDEX';\nconst DECREMENT_ACTIVE_INDEX = 'typeahead/DECREMENT_ACTIVE_INDEX';\nconst ACTIVATE_MOUSE_HOVER = 'typeahead/ACTIVATE_MOUSE_HOVER';\nconst DEACTIVATE_MOUSE_HOVER = 'typeahead/DEACTIVATE_MOUSE_HOVER';\n\n// Actions\nexport function setList(payload) {\n  return {\n    type: SET_LIST,\n    payload\n  };\n}\n\nexport function hideDropdown() {\n  return {\n    type: HIDE_DROPDOWN\n  };\n}\n\nexport function updateSearchTerm(payload) {\n  return {\n    type: UPDATE_SEARCH_TERM,\n    payload\n  };\n}\n\nexport function selectItem(payload) {\n  return {\n    type: SELECT_ITEM,\n    payload\n  };\n}\n\nexport function incrementActiveIndex(payload) {\n  return {\n    type: INCREMENT_ACTIVE_INDEX,\n    payload\n  };\n}\n\nexport function decrementActiveIndex(payload) {\n  return {\n    type: DECREMENT_ACTIVE_INDEX,\n    payload\n  };\n}\n\nexport function activateMouseHover(payload) {\n  return {\n    type: ACTIVATE_MOUSE_HOVER,\n    payload\n  };\n}\n\nexport function deactivateMouseHover(payload) {\n  return {\n    type: DEACTIVATE_MOUSE_HOVER,\n    payload\n  };\n}\n\n// Reducer\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case SET_LIST: {\n      const list = payload.map(item => ({\n        id: uniqueId(item),\n        value: item\n      }));\n\n      return { ...state, list };\n    }\n\n    case HIDE_DROPDOWN: {\n      return { ...state, dropdownActive: false };\n    }\n\n    case UPDATE_SEARCH_TERM: {\n      return {\n        ...state,\n        searchTerm: payload,\n        tempValue: '',\n        hoverActive: false,\n        dropdownActive: true,\n        activeIndex: -1\n      };\n    }\n\n    case SELECT_ITEM: {\n      return {\n        ...state,\n        dropdownActive: false,\n        searchTerm: payload\n      };\n    }\n\n    case INCREMENT_ACTIVE_INDEX: {\n      const filteredListLength = payload.length;\n      const current = state.activeIndex;\n\n      return {\n        ...state,\n        activeIndex: current === filteredListLength - 1 ? 0 : current + 1\n      };\n    }\n\n    case DECREMENT_ACTIVE_INDEX: {\n      const filteredListLength = payload.length;\n      const current = state.activeIndex;\n\n      return {\n        ...state,\n        activeIndex: current === 0 ? filteredListLength - 1 : current - 1\n      };\n    }\n\n    case ACTIVATE_MOUSE_HOVER: {\n      return {\n        ...state,\n        tempValue: payload,\n        hoverActive: true\n      };\n    }\n\n    case DEACTIVATE_MOUSE_HOVER: {\n      return {\n        ...state,\n        tempValue: '',\n        hoverActive: false\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getMatchedItems = memoize(state => {\n  const trimedValue = trim(state.searchTerm);\n\n  if (trimedValue === '') {\n    return [];\n  }\n\n  return state.list.filter(item =>\n    item.value.toLowerCase().includes(trimedValue.toLowerCase())\n  );\n});\n\nexport default reducer;\n","import styled from '@emotion/styled';\n\nexport default styled.input`\n  font-size: 18px;\n  padding: 12px 10px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n`;\n","import sanitizeHtml from 'sanitize-html';\nimport memoize from 'fast-memoize';\n\nconst sanitize = value =>\n  sanitizeHtml(value, {\n    allowedTags: ['b'],\n    allowedAttributes: {},\n    allowedIframeHostnames: []\n  });\n\nexport default memoize(sanitize);\n","import trim from 'lodash/fp/trim';\nimport memoize from 'fast-memoize';\n\nconst highlight = (termToMatch, value) => {\n  const regex = new RegExp(trim(termToMatch), 'gi');\n\n  return value.replace(regex, match => `<b>${match}</b>`);\n};\n\nexport default memoize(highlight);\n","import React, { useEffect, useRef, useReducer, useCallback } from 'react';\nimport styled from '@emotion/styled';\nimport compose from 'lodash/fp/compose';\n\nimport reducer, {\n  initialState,\n  setList,\n  hideDropdown,\n  updateSearchTerm,\n  selectItem,\n  incrementActiveIndex,\n  decrementActiveIndex,\n  activateMouseHover,\n  deactivateMouseHover,\n  getMatchedItems\n} from './reducer';\nimport InputField from 'components/InputField/InputField';\nimport sanitize from 'helpers/sanitize';\nimport highlight from 'helpers/highlight';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst ListWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  max-height: 300px;\n  border-radius: 4px;\n  overflow: auto;\n`;\n\nconst ListItem = styled.div`\n  cursor: pointer;\n  padding: 12px 10px;\n  background-color: ${props => (props.isActive ? '#eee' : 'fff')};\n\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nfunction Typeahead({ name, options }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const matches = getMatchedItems(state);\n\n  const listRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Set the list in the reducer\n  useEffect(() => {\n    dispatch(setList(options));\n  }, [options]);\n\n  // Check if user clicked outside the input or dropdown\n  useEffect(() => {\n    function handleClick(evt) {\n      if (\n        (listRef.current && listRef.current.contains(evt.target)) ||\n        (inputRef.current && inputRef.current.contains(evt.target))\n      ) {\n        return;\n      }\n\n      dispatch(hideDropdown());\n    }\n\n    document.addEventListener('click', handleClick);\n\n    return () => document.removeEventListener('click', handleClick);\n  }, []);\n\n  // Move the active item in the dropdown scroll view\n  useEffect(() => {\n    const activeNode =\n      listRef.current && listRef.current.children[state.activeIndex];\n\n    if (!activeNode) {\n      return;\n    }\n\n    activeNode.scrollIntoView({\n      block: 'nearest'\n    });\n  }, [state.activeIndex]);\n\n  function handleInputChange({ target }) {\n    dispatch(updateSearchTerm(target.value));\n  }\n\n  function handleKeyDown(evt) {\n    if (\n      evt.key === 'ArrowDown' &&\n      evt.key === 'ArrowUp' &&\n      evt.key === 'Enter'\n    ) {\n      evt.preventDefault();\n    }\n\n    switch (evt.key) {\n      case 'Enter': {\n        return dispatch(selectItem(matches[state.activeIndex].value));\n      }\n\n      case 'Tab': {\n        return dispatch(hideDropdown());\n      }\n\n      case 'Escape': {\n        return dispatch(hideDropdown());\n      }\n\n      case 'ArrowUp': {\n        return dispatch(\n          decrementActiveIndex({\n            length: matches.length\n          })\n        );\n      }\n\n      case 'ArrowDown': {\n        return dispatch(\n          incrementActiveIndex({\n            length: matches.length\n          })\n        );\n      }\n\n      default: {\n        return true;\n      }\n    }\n  }\n\n  function handleItemClick({ target }) {\n    dispatch(selectItem(target.dataset.value));\n  }\n\n  function handleMouseEnter({ target }) {\n    dispatch(activateMouseHover(target.dataset.value));\n  }\n\n  function handleMouseLeave() {\n    dispatch(deactivateMouseHover());\n  }\n\n  const memoizedHighlight = useCallback(\n    value => highlight(state.searchTerm, value),\n    [state]\n  );\n\n  return (\n    <Wrapper>\n      <InputField\n        ref={inputRef}\n        value={state.hoverActive ? state.tempValue : state.searchTerm}\n        type=\"text\"\n        name={name}\n        id={name}\n        autocomplete=\"off\"\n        placeholder=\"Search...\"\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n      />\n      {state.dropdownActive && (\n        <ListWrapper ref={listRef}>\n          {matches.map((item, idx) => (\n            <ListItem\n              key={item.id}\n              onClick={handleItemClick}\n              onMouseEnter={handleMouseEnter}\n              onMouseLeave={handleMouseLeave}\n              data-value={item.value}\n              data-index={idx}\n              isActive={state.activeIndex === idx}\n              dangerouslySetInnerHTML={{\n                __html: compose(sanitize, memoizedHighlight)(item.value)\n              }}\n            />\n          ))}\n        </ListWrapper>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Typeahead;\n","export default [\n  'Açaí',\n  'Apple',\n  'Akee',\n  'Apricot',\n  'Avocado',\n  'Banana',\n  'Bilberry',\n  'Blackberry',\n  'Blackcurrant',\n  'Black sapote',\n  'Blueberry',\n  'Boysenberry',\n  \"Buddha's hand\",\n  'Crab apples',\n  'Currant',\n  'Cherry',\n  'Cherimoya',\n  'Chico fruit',\n  'Cloudberry',\n  'Coconut',\n  'Cranberry',\n  'Cucumber',\n  'Damson',\n  'Date',\n  'Dragonfruit',\n  'Pitaya',\n  'Durian',\n  'Elderberry',\n  'Feijoa',\n  'Fig',\n  'Goji berry',\n  'Gooseberry',\n  'Grape',\n  'Raisin',\n  'Grapefruit',\n  'Guava',\n  'Honeyberry',\n  'Huckleberry',\n  'Jabuticaba',\n  'Jackfruit',\n  'Jambul',\n  'Japanese plum',\n  'Jostaberry',\n  'Jujube',\n  'Juniper berry',\n  'Kiwano',\n  'Kiwifruit',\n  'Kumquat',\n  'Lemon',\n  'Lime',\n  'Loquat',\n  'Longan',\n  'Lychee',\n  'Mango',\n  'Mangosteen',\n  'Marionberry',\n  'Melon',\n  'Cantaloupe',\n  'Honeydew',\n  'Watermelon',\n  'Miracle fruit',\n  'Mulberry',\n  'Nectarine',\n  'Nance',\n  'Olive',\n  'Orange',\n  'Blood orange',\n  'Clementine',\n  'Mandarine',\n  'Tangerine',\n  'Papaya',\n  'Passionfruit',\n  'Peach',\n  'Pear',\n  'Persimmon',\n  'Plantain',\n  'Plum',\n  'Prune',\n  'Pineapple',\n  'Pineberry',\n  'Plumcot',\n  'Pomegranate',\n  'Pomelo',\n  'Purple mangosteen',\n  'Quince',\n  'Raspberry',\n  'Salmonberry',\n  'Rambutan',\n  'Redcurrant',\n  'Salal',\n  'Salak',\n  'Satsuma',\n  'Soursop',\n  'Star apple',\n  'Star fruit',\n  'Strawberry',\n  'Surinam cherry',\n  'Tamarillo',\n  'Tamarind',\n  'Ugli fruit',\n  'White currant',\n  'White sapote',\n  'Yuzu',\n  'Avocado',\n  'Bell pepper',\n  'Chili pepper',\n  'Corn kernel',\n  'Cucumber',\n  'Eggplant',\n  'Olive',\n  'Pea',\n  'Pumpkin',\n  'Squash',\n  'Tomato',\n  'Zucchini'\n];\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Typeahead from 'components/Typeahead/Typeahead';\nimport InputField from 'components/InputField/InputField';\nimport items from 'data/items';\n\nconst Wrapper = styled.div`\n  padding: 30px;\n  width: 400px;\n  margin: 0 auto;\n`;\n\nconst FormField = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst InputLabel = styled.label`\n  display: inline-block;\n  padding-bottom: 6px;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <FormField>\n        <InputLabel htmlFor=\"select\">Typeahead</InputLabel>\n        <Typeahead name=\"select\" options={items} />\n      </FormField>\n\n      <FormField>\n        <InputLabel htmlFor=\"other-input\">Other Input</InputLabel>\n        <InputField type=\"text\" name=\"other-input\" id=\"other-input\" />\n      </FormField>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}